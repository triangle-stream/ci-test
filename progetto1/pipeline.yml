resources:
- name: ci-test-repo
  type: git
  source:
    uri: git@github.com:triangle-stream/ci-test.git
    branch: main
    private_key: ((git_private_key))

jobs:
- name: check-progetto1-and-update
  plan:
  - get: ci-test-repo
    trigger: true
    version: every
  - task: create-test-file
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: alpine/git
      inputs:
      - name: ci-test-repo
      outputs:
      - name: updated-repo
      params:
        GIT_SSH_KEY: ((git_private_key))
      run:
        path: sh
        args:
        - -exc
        - 
          # Configura SSH per accedere al repository
          mkdir -p ~/.ssh
          echo "$GIT_SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Aggiungi GitHub agli host conosciuti
          ssh-keyscan -t ed25519 github.com >> ~/.ssh/known_hosts

          # Inizializza Git nella directory del task
          cd ci-test-repo
          git init

          # Verifica se il remote esiste, altrimenti lo aggiunge
          if git remote | grep -q origin; then
            echo "Remote origin esistente. Procedo."
          else
            git remote add origin git@github.com:triangle-stream/ci-test.git
          fi
          

          # Aggiorna il repository per sincronizzarsi con il branch principale
          git fetch origin main
          git checkout main
          git pull origin main

          # Verifica modifiche in progetto1
          if [ "$(git diff --name-only HEAD^ HEAD | grep progetto1/)" ]; then
            echo "Modifiche rilevate in progetto1"
            
            # Crea il file test-mada.txt in progetto3
            cd progetto3
            echo "Test file created at $(date)" > test-mada.txt
            cd ..
            
            # Commit e push delle modifiche
            git config --global user.email "ci@trianglecdn.it"
            git config --global user.name "Concourse CI"
            git add progetto3/test-mada.txt
            git commit -m "Aggiunto test-mada.txt dopo modifiche in progetto1"
            git push origin main
          else


            echo "Nessuna modifica rilevata in progetto1"
          fi


